-- drop table if exists ruchir_CRIS_approved_card_stats;
-- create table ruchir_CRIS_approved_card_stats as

select
stat_enh.MEMBER_ID,
decode ( stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_CODE , 'BCHFMC', 'High Fee Card','BCLFMC' ,'Low Fee Card') as card_type,
stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_CODE,
stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_DESCRIPTION,
mem_trans.LOYALTY_PARTNER_BOOKABLE_ACTIVITY_CODE,
mem_trans.ACTIVITY_TYPE_CATEGORY_CODE,
mem_trans.ACTIVITY_TYPE_CATEGORY_NAME,
mem_trans.LOYALTY_PARTNER_CODE,
mem_trans.LOYALTY_PARTNER_NAME,
mem_trans.STATEMENT_DESCRIPTION,
mem_trans.MEMBER_ACTIVITY_TYPE_CODE,
mem_trans.TRANSACTION_DESCRIPTION,
to_date(mem_trans.MEMBER_ACTIVITY_DATE) as MEMBER_ACTIVITY_DATE,
trunc(to_date(mem_trans.MEMBER_ACTIVITY_DATE), 'MM') as activity_month,
trunc(to_date(stat_enh.ACTIVATION_DATE),'MM') as activation_month,
trunc(to_date(mem_trans.TRANSACTION_DATE),'MM') as trans_month,
to_date(mem_trans.TRANSACTION_DATE)  as TRANSACTION_DATE,
stat_enh.age_bucket,
stat_enh.COUNTRY_OF_RESIDENCE_CODE,
stat_enh.COUNTRY_OF_RESIDENCE,
stat_enh.tenure,
to_date(stat_enh.JOIN_DATE) JOIN_DATE,
stat_enh.LOYALTY_TIER_CODE,
stat_enh.NATIONALITY_CODE,
to_date(stat_enh.ACTIVATION_DATE) ACTIVATION_DATE,
stat_enh.gender,
stat_enh.MEMBERSHIP_TENURE_TYPE,
to_date(stat_enh.CARD_EXPIRY) CARD_EXPIRY_date,
sum(mem_trans.TIER_MILES) TIER_MILES ,
sum(mem_trans.exp_miles)  exp_miles,
sum(mem_trans.tot_activities) tot_activities,
sum(mem_trans.sky_miles) sky_miles

from


		(
		 SELECT
		  to_char(SKYWARDS_MEMBER.SKYWARDS_MEMBER_IDENTIFIER) as MEMBER_ID,
		  SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_CODE,
		  SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_DESCRIPTION,
		  to_date(SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.CARD_EXPIRY_DATE) as CARD_EXPIRY,
		  		CASE
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 1 and 10 THEN  '1-10'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 11 and 20 THEN '11-20'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 21 and 30 THEN '21-30'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 31 and 40 THEN '31-40'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 41 and 50 THEN '41-50'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 51 and 60 THEN '51-60'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 61 and 70 THEN '61-70'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 71 and 80 THEN '71-80'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 81 and 90 THEN '81-90'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 91 and 100 THEN '91-100'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 101 and 110 THEN '101-110'
				 WHEN datediff (years, to_date(CUSTOMER.BIRTH_DATE), sysdate()) between 110 and 150 THEN '>111'
			   END age_bucket,
		  CUSTOMER.COUNTRY_OF_RESIDENCE_CODE,
		  CUSTOMER.COUNTRY_OF_RESIDENCE,
			CASE
				 WHEN datediff (years, to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE), sysdate()) between 0 and 2 THEN  '00-02 years'
				 WHEN datediff (years, to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE), sysdate()) between 3 and 5 THEN '03-05 years'
				 WHEN datediff (years, to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE), sysdate()) between 6 and 10 THEN '06-10 years'
				 WHEN datediff (years, to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE), sysdate()) between 11 and 15 THEN '11-15 years'
				 WHEN datediff (years, to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE), sysdate()) >= 16  THEN '16+ years'
			   END tenure,
		  to_date(SKYWARDS_MEMBER.MEMBER_JOIN_DATE) JOIN_DATE,
		  SKYWARDS_MEMBER.LOYALTY_TIER_CODE,
		  CUSTOMER_NATIONALITY.NATIONALITY_CODE,
		  DECODE(CUSTOMER.GENDER_CODE,'F','FEMALE','M','MALE',NULL) gender,
		  to_date(SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.CARD_ACTIVATION_DATE) ACTIVATION_DATE,
		  case
		  when SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.CARD_ACTIVATION_DATE between (SKYWARDS_MEMBER.MEMBER_JOIN_DATE -5) and (SKYWARDS_MEMBER.MEMBER_JOIN_DATE + 5) then 'NEW_MEMBER'
		  else 'EXISTING_MEMBER' end MEMBERSHIP_TENURE_TYPE
		  
		  
		  
		FROM
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBER"
		  join
		  "EDWH_PROD"."GOLD"."CUSTOMER"
		  on SKYWARDS_MEMBER.SKYWARDS_MEMBER_IDENTIFIER = CUSTOMER.SKYWARDS_MEMBER_IDENTIFIER
		  left join
		  "EDWH_PROD"."GOLD"."CUSTOMER_NATIONALITY" as CUSTOMER_NATIONALITY
		  on  (CUSTOMER.PARTY_SK = CUSTOMER_NATIONALITY.PARTY_SK)
		  JOIN
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT"
		  ON SKYWARDS_MEMBER.SKYWARDS_MEMBER_IDENTIFIER = SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.SKYWARDS_MEMBER_IDENTIFIER
		  JOIN
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON"
		  ON SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.MEMBERSHIP_ENHANCEMENT_REASON_SK = SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_SK
          where 
          SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_CODE  IN  ( 'BCHFMC','BCLFMC'  )
          and
		  SKYWARDS_MEMBER.MEMBER_STATUS_CODE IN ('Active','Pending','INV','SUS') 
		  and
		  to_date(SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT.CARD_EXPIRY_DATE) is null 
		  and
		  SKYWARDS_MEMBER.ENROLLMENT_MEDIA_CODE NOT IN ('FAM','TEST','SDAE','HXGAD')

			) stat_enh
    left join
		  (
		  
		  SELECT
		  to_char(VW_CUSTOMER.SKYWARDS_MEMBER_IDENTIFIER) as member_id,
		  STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_CODE,
		  SKYWARDS_PARTNER_ACTIVITY.LOYALTY_PARTNER_BOOKABLE_ACTIVITY_CODE,
		  SKYWARDS_ACTIVITY_CATEGORY.ACTIVITY_TYPE_CATEGORY_CODE,
		  SKYWARDS_ACTIVITY_CATEGORY.ACTIVITY_TYPE_CATEGORY_NAME,
		  SKYWARDS_PARTNER.LOYALTY_PARTNER_CODE,
		  SKYWARDS_PARTNER.LOYALTY_PARTNER_NAME,
		  SKYWARDS_MEMBERSHIP_ACTIVITY.STATEMENT_DESCRIPTION,
		  SKYWARDS_MEMBER_ACTIVITY_TYPE.MEMBER_ACTIVITY_TYPE_CODE,
		  VW_MEMBER_ACT_TRANSACTIONS.TRANSACTION_DESCRIPTION,
		  to_date(SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_DATE) MEMBER_ACTIVITY_DATE,
		  to_date(VW_MEMBER_ACT_TRANSACTIONS.TRANSACTION_DATE) TRANSACTION_DATE,
		  
		  sum(VW_MEMBER_ACT_TRANSACTIONS.TIER_MILES_NUMBER) TIER_MILES,
		  sum(nvl(VW_MEMBER_ACT_TRANSACTIONS.SKYWARDS_MILES_NUMBER,0) +nvl( VW_MEMBER_ACT_TRANSACTIONS.GROUP_MILES_NUMBER,0)) as sky_miles,
		  
		  
		  nvl(sum(
				 case 
				   when SKYWARDS_TRANSACTION_TYPE.TRANSACTION_TYPE_CODE in ('SEXP','EXP')
				   then VW_MEMBER_ACT_TRANSACTIONS.SKYWARDS_MILES_NUMBER
					 end),0) exp_miles,

		  count(DISTINCT (CASE WHEN SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_SEQUENCE_NUMBER=0 THEN NULL ELSE SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_SEQUENCE_NUMBER END) ) tot_activities
		  
		FROM
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBER" as vw_customer
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT" as VW_MEMBER_STATUS_ENHANCEMENTS
		  on VW_CUSTOMER.SKYWARDS_MEMBER_IDENTIFIER = VW_MEMBER_STATUS_ENHANCEMENTS.SKYWARDS_MEMBER_IDENTIFIER
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBERSHIP_STATUS_ENHANCEMENT_REASON" as STATUS_ENHANCEMENT_REASON
		  on VW_MEMBER_STATUS_ENHANCEMENTS.MEMBERSHIP_ENHANCEMENT_REASON_SK = STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_SK
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBERSHIP_ACTIVITY" as SKYWARDS_MEMBERSHIP_ACTIVITY
		  on VW_CUSTOMER.PARTY_MEMBERSHIP_SK = SKYWARDS_MEMBERSHIP_ACTIVITY.PARTY_MEMBERSHIP_SK
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_MEMBER_ACTIVITY_TRANSACTION" as VW_MEMBER_ACT_TRANSACTIONS
		  on SKYWARDS_MEMBERSHIP_ACTIVITY.PARTY_MEMBERSHIP_ACTIVITY_SK = VW_MEMBER_ACT_TRANSACTIONS.PARTY_MEMBERSHIP_ACTIVITY_SK and SKYWARDS_MEMBERSHIP_ACTIVITY.PARTY_SK = VW_MEMBER_ACT_TRANSACTIONS.PARTY_SK
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_PARTNER" as SKYWARDS_PARTNER on VW_MEMBER_ACT_TRANSACTIONS.LOYALTY_PARTNER_SK = SKYWARDS_PARTNER.LOYALTY_PARTNER_SK
		  join
		  "EDWH_PROD"."GOLD"."SKYWARDS_PARTNER_ACTIVITY" as SKYWARDS_PARTNER_ACTIVITY on VW_MEMBER_ACT_TRANSACTIONS.LOYALTY_PARTNER_SK = SKYWARDS_PARTNER_ACTIVITY.LOYALTY_PARTNER_SK 
		  and VW_MEMBER_ACT_TRANSACTIONS.LOYALTY_PARTNER_ACTIVITY_SK = SKYWARDS_PARTNER_ACTIVITY.LOYALTY_PARTNER_ACTIVITY_SK
		  join
		"EDWH_PROD"."GOLD"."SKYWARDS_MEMBER_ACTIVITY_TYPE" as SKYWARDS_MEMBER_ACTIVITY_TYPE on SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_TYPE_SK = SKYWARDS_MEMBER_ACTIVITY_TYPE.MEMBER_ACTIVITY_TYPE_SK 
		and SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_TYPE_SEQ = SKYWARDS_MEMBER_ACTIVITY_TYPE.MEMBER_ACTIVITY_TYPE_SEQ
		join
		"EDWH_PROD"."GOLD"."SKYWARDS_ACTIVITY_CATEGORY"	as SKYWARDS_ACTIVITY_CATEGORY on (SKYWARDS_MEMBERSHIP_ACTIVITY.ACTIVITY_TYPE_CATEGORY_SK = SKYWARDS_ACTIVITY_CATEGORY.ACTIVITY_TYPE_CATEGORY_SK)
		join
		"EDWH_PROD"."GOLD"."SKYWARDS_TRANSACTION_TYPE" as SKYWARDS_TRANSACTION_TYPE
		on VW_MEMBER_ACT_TRANSACTIONS.TRANSACTION_TYPE_SK = SKYWARDS_TRANSACTION_TYPE.TRANSACTION_TYPE_SK
		  
		  
		  
		WHERE
		   VW_CUSTOMER.MEMBER_STATUS_CODE IN ('Active','Pending','INV','SUS') 
		   AND
		   STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_CODE  IN  ( 'BCHFMC','BCLFMC'  )
           AND
		   to_date(SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_DATE)  >=  '2020-09-13' 
		   and
		   SKYWARDS_MEMBER_ACTIVITY_TYPE.MEMBER_ACTIVITY_TYPE_CODE NOT IN ('ENR','RCR')
		   and SKYWARDS_MEMBERSHIP_ACTIVITY.ACTIVITY_CANCELLED_FLAG = 'N'

		  
		GROUP BY
		 to_char(VW_CUSTOMER.SKYWARDS_MEMBER_IDENTIFIER) ,
		  STATUS_ENHANCEMENT_REASON.MEMBERSHIP_ENHANCEMENT_REASON_CODE,
		  SKYWARDS_PARTNER_ACTIVITY.LOYALTY_PARTNER_BOOKABLE_ACTIVITY_CODE,
		  SKYWARDS_ACTIVITY_CATEGORY.ACTIVITY_TYPE_CATEGORY_CODE,
		  SKYWARDS_ACTIVITY_CATEGORY.ACTIVITY_TYPE_CATEGORY_NAME,
		  SKYWARDS_PARTNER.LOYALTY_PARTNER_CODE,
		  SKYWARDS_PARTNER.LOYALTY_PARTNER_NAME,
		  SKYWARDS_MEMBERSHIP_ACTIVITY.STATEMENT_DESCRIPTION,
		  SKYWARDS_MEMBER_ACTIVITY_TYPE.MEMBER_ACTIVITY_TYPE_CODE,
		  VW_MEMBER_ACT_TRANSACTIONS.TRANSACTION_DESCRIPTION,
		  to_date(SKYWARDS_MEMBERSHIP_ACTIVITY.MEMBER_ACTIVITY_DATE) ,
		  to_date(VW_MEMBER_ACT_TRANSACTIONS.TRANSACTION_DATE)
         

			) mem_trans on stat_enh.member_id = mem_trans.member_id

group by
stat_enh.MEMBER_ID,
decode ( stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_CODE , 'BCHFMC', 'High Fee Card','BCLFMC' ,'Low Fee Card'),
stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_CODE,
stat_enh.MEMBERSHIP_ENHANCEMENT_REASON_DESCRIPTION,
mem_trans.LOYALTY_PARTNER_BOOKABLE_ACTIVITY_CODE,
mem_trans.ACTIVITY_TYPE_CATEGORY_CODE,
mem_trans.ACTIVITY_TYPE_CATEGORY_NAME,
mem_trans.LOYALTY_PARTNER_CODE,
mem_trans.LOYALTY_PARTNER_NAME,
mem_trans.STATEMENT_DESCRIPTION,
mem_trans.MEMBER_ACTIVITY_TYPE_CODE,
mem_trans.TRANSACTION_DESCRIPTION,
to_date(mem_trans.MEMBER_ACTIVITY_DATE),
trunc(to_date(mem_trans.MEMBER_ACTIVITY_DATE), 'MM'),
trunc(to_date(stat_enh.ACTIVATION_DATE),'MM'),
trunc(to_date(mem_trans.TRANSACTION_DATE),'MM'),
to_date(mem_trans.TRANSACTION_DATE),
stat_enh.age_bucket,
stat_enh.COUNTRY_OF_RESIDENCE_CODE,
stat_enh.COUNTRY_OF_RESIDENCE,
stat_enh.tenure,
to_date(stat_enh.JOIN_DATE),
stat_enh.LOYALTY_TIER_CODE,
stat_enh.NATIONALITY_CODE,
to_date(stat_enh.ACTIVATION_DATE),
stat_enh.gender,
stat_enh.MEMBERSHIP_TENURE_TYPE,
to_date(stat_enh.CARD_EXPIRY)

